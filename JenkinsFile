pipeline{
    agent any
    stages{
        stage('Build'){
            steps{
                echo "Using Ansible Automation Tool to compile and package the code"
            }
        }
        stage('Test') {
            steps {
                echo "Simulating Unit Testing"
                echo "Simulating Integration Testing"
                // Generate test.log file (simulation)
                sh 'echo "Unit Testing and Integration Testing are completed successfully" > test.log'
                // Archive test.log as an artifact
                archiveArtifacts artifacts: 'test.log', allowEmptyArchive: true
            }
            post {
                success {
                    emailext to: "varsha15hv@gmail.com",
                             subject: "Test success",
                             body: "Unit Testing and Integration Testing are completed successfully",
                             attachmentsPattern: 'test.log'
                }
                failure {
                    emailext to: "varsha15hv@gmail.com",
                             subject: "Test failure",
                             body: "Unit Testing or Integration Testing failed",
                             attachmentsPattern: 'test.log'
                }
            }
        }
        stage('Code Analysis'){
            steps{
                echo "Analyzing the code using Clang Tool."
            }
        }
        stage('Security Scan'){
            steps{
                echo "Scanning to identify any vulnerabities in the code using Nexpose Security Tool."
            }
            post{
                success{
                    mail to: "varsha15hv@gmail.com",
                    subject: "Security Scan success or failure",
                    body: "Security Scan stage is successful without any vulnerabities found"
            }
        }
        }
        stage('Deploy to Staging'){
            steps{
                echo "Deploying the application to staging server - AWS EC2 instance"
            }
        }
        stage('Integration Tests on Staging'){
            steps{
                echo "Running Integration testing on the AWS EC2 instance application functions as expected in a production-like environment"
            }
        }
        stage('Deploy to Production'){
            steps{
                echo "Deploying the application to production server - AWS EC2 instance"
            }
        }
       
    }

}
